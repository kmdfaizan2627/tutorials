There are four types of Java access modifiers:
1.
Private: The access level of a private modifier is only within the class. It cannot be accessed from outside the class.


2.
Default: The access level of a default modifier is only within the package. It cannot be accessed from outside the package.
If you do not any access level, it will be the default.

3.
Protected: The access level of a protected modifier is within the package so we can access it within the package
 and to use it outside package we need a child class to access it.
If you do not make the child class, it cannot be accessed from outside the package.

4.
Public: The access level of a public modifier is everywhere. It can be accessed from within the class, outside the class,
 within the package and outside the package.
 
 Notes-
 A program will always starts from main(String[] args) method and will run line by line sequencially..
 
 There are many ways to write a program to achieve one result like below-
 Example-1
 
 
 class Example1{
     int a = 100;
     int  b = 200;
     
 }
 class Example2 {
   public static void main(String[] args){
     Examplw1 obj = new Example1();
     System.out.println(obj.a+obj.b)
   }
  
  
  Example -2
  class Example4{
        public static void main(String[] args){
        int c = 100;
        int d = 200;
        System.out.print(c+d);
        }
        
        
  Here in example 1 to access variable a and b we were required to create object of class because it belongs to that class and they are non static.
  But in example 2 directly we have accessed because variable c and d belongs in the class.
  
  
  Same way it works for methods also.Methods are also called functions in Java.
  
   class Example1{
   public void f1(){
     int a = 100;
     int  b = 200;
     System.out.print(a+b);
     }
 }
 class Example2 {
   public static void main(String[] args){
     Examplw1 obj = new Example1();
     System.out.println(obj.f1);
   }
   
   Here it is clear that Example1 in both cases , we need to create object because they are non-static.
   
   
   
   
   
   
  